---
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { utcToString } from "src/utils/date-utils";
import Sort from "src/utils/sort-utils";
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";

interface Props {
  page: { data: CollectionEntry<"writings">[] };
}

export const getStaticPaths = (async ({ paginate }) => {
  const writings = await getCollection("writings");
  const sortedWritings = writings.sort(Sort.byDate);
  return paginate(sortedWritings, { pageSize: 5 });
}) satisfies GetStaticPaths;

const {
  page: { data },
} = Astro.props as Props;

const writings = data;
---

<Layout title="Writing">
  <div class="mx-auto px-6 md:px-12 lg:max-w-4xl">
    <h2 class="text-4xl font-bold mb-4">Writing</h2>
    <h4 class="text-zinc-600 text-xl">An archive of my thoughts and ideas.</h4>

    <ul class="mt-8 flex flex-col divide-y divide-zinc-800">
      {
        writings.length ? (
          writings.map((writing) => {
            const {
              data: { title, description, image, createdAt, tags },
              id,
            } = writing;
            return (
              <li class="grid grid-cols-[25%_75%] space-x-6 py-12 ">
                <div class="h-min overflow-hidden rounded-2xl">
                  <Image
                    src={image.src}
                    alt={image.alt}
                    width="200"
                    height="200"
                    quality="50"
                    format="avif"
                    loading="lazy"
                    decoding="async"
                    class="object-cover rounded-2xl w-full h-56 hover:scale-125 transition-all duration-500 cursor-pointer"
                  />
                </div>

                <div>
                  <a
                    href={`/writing/${id}`}
                    class="text-2xl font-bold text-zinc-50 hover:text-teal-300"
                  >
                    {title}
                  </a>

                  <div class="flex gap-2 mt-2">
                    {tags.map((tag) => (
                      <span class="text-sm text-zinc-400 bg-zinc-800 px-2 py-0.5 rounded-md">
                        {tag}
                      </span>
                    ))}
                  </div>

                  <p class="text-zinc-400 text-md mt-4 line-clamp-4">
                    {description}
                  </p>

                  <p class="text-zinc-600 text-sm mt-4">
                    {utcToString(createdAt)}
                  </p>
                </div>
              </li>
            );
          })
        ) : (
          <p class="text-orange-300 text-xl">No writings available yet.</p>
        )
      }
      {}
    </ul>
  </div>
</Layout>
